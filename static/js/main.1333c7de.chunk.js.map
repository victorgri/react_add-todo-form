{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","id","name","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","username","getUser","userId","usersFromServer","find","App","useState","todoList","setTodoList","setUserId","setTitle","isTitle","setIsTitle","isUser","setIsUser","action","method","onSubmit","event","preventDefault","length","newTodo","Math","max","currentTodos","addTodo","type","placeholder","value","onChange","target","disabled","userFromSerever","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1333c7de.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a\n    className=\"UserInfo\"\n    href={`mailto:${user.email}`}\n    data-id={user.id}\n  >\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    className={\n      classNames('TodoInfo', { 'TodoInfo--completed': todo.completed })\n    }\n    data-id={todo.id}\n  >\n    <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n    {todo.user && (<UserInfo user={todo.user} />)}\n  </article>\n);\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {\n      todos.map(todo => (<TodoInfo key={todo.id} todo={todo} />))\n    }\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FormEvent, useState } from 'react';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport './App.scss';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [todoList, setTodoList] = useState(todos);\n  const [userId, setUserId] = useState(0);\n  const [title, setTitle] = useState('');\n  const [isTitle, setIsTitle] = useState(false);\n  const [isUser, setIsUser] = useState(false);\n\n  const maxId = () => {\n    return Math.max(...todoList.map(todo => todo.id)) + 1;\n  };\n\n  const addTodo = () => {\n    const newTodo = {\n      id: maxId(),\n      title,\n      completed: false,\n      userId,\n      user: getUser(userId),\n    };\n\n    setTodoList(currentTodos => {\n      return [...currentTodos, newTodo];\n    });\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n    if (title.length === 0) {\n      setIsTitle(true);\n    }\n\n    if (userId === 0) {\n      setIsUser(true);\n    }\n\n    if (title.length > 0 && userId > 0) {\n      addTodo();\n      setTitle('');\n      setUserId(0);\n      setIsTitle(false);\n      setIsUser(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter the title\"\n            value={title}\n            onChange={(event) => {\n              const { value } = event.target;\n\n              setTitle(value);\n            }}\n          />\n          {(isTitle && title.length === 0)\n            && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={(event) => {\n              const { value } = event.target;\n\n              setUserId(+value);\n            }}\n          >\n            <option\n              value=\"0\"\n              disabled\n            >\n              Choose a user\n            </option>\n\n            {usersFromServer.map(userFromSerever => {\n              const { id, name } = userFromSerever;\n\n              return <option value={id} key={id}>{name}</option>;\n            })}\n          </select>\n\n          {(isUser && userId === 0)\n            && (<span className=\"error\">Please choose a user</span>)}\n        </div>\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={todoList} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}